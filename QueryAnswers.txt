1-SELECT student_name , student_id 
  FROM student as s JOIN enrolled as e ON s.student_id=e.student_id JOIN semester_course as sem ON sem.course_code = e.course_code
  WHERE sem.`year` = e.`year` and sem.quarter = en.quarter and  s.level = "SR" and sem.prof_id = 1
  GROUP BY s.student_id;

Result:

	student_name	student_id	
	Maria White	201
	Charles Harris	202

2-SELECT max(s.age) FROM student as s JOIN enrolled as e ON s.student_id=e.student_id JOIN semester_course as sem ON e.course_code=sem.course_code JOIN professor as p ON sem.prof_id=p.prof_id
WHERE s.major='History' OR p.prof_name='Michael Miller';

Result:
	max(s.age)
	22

3-SELECT DISTINCT s.student_id , s.student_name , c.name 
FROM student as s  LEFT JOIN enrolled as e ON s.student_id=e.student_id LEFT JOIN course as c ON e.course_code=c.course_code

Result:
	
student_id	student_name		name	
201		Maria White		Data Structures
201		Maria White		Archaeology of the Incas
201		Maria White		Aviation Accident Investigation
202		Charles Harris		Data Structures
202		Charles Harris		Database Systems
202		Charles Harris		Operating System Design
202		Charles Harris		Air Quality Engineering
203		Susan Martin		Database Systems
203		Susan Martin		Operating System Design
203		Susan Martin		Archaeology of the Incas
204		Joseph Thompson		Data Structures
204		Joseph Thompson		American Political Parties
204		Joseph Thompson		Social Cognition
205		Christopher Garcia	Operating System Design
206		Angela Martinez		Data Structures
207		Thomas Robinson		Database Systems
207		Thomas Robinson		Introductory Latin
208		Margaret Clark		Data Structures
208		Margaret Clark		Operating System Design
208		Margaret Clark		Archaeology of the Incas
208		Margaret Clark		Aviation Accident Investigation
208		Margaret Clark		Air Quality Engineering
209		Juan Rodriguez		Data Structures
209		Juan Rodriguez		Archaeology of the Incas
209		Juan Rodriguez		Aviation Accident Investigation
210		Dorthy Lewis		Data Structures
210		Dorthy Lewis		Database Systems
210		Dorthy Lewis		Aviation Accident Investigation
210		Dorthy Lewis		Air Quality Engineering
210		Dorthy Lewis		Introductory Latin
211		Daniel Lee		Data Structures
211		Daniel Lee		Archaeology of the Incas
211		Daniel Lee		Air Quality Engineer
211		Daniel Lee		Introductory Latin
211		Daniel Lee		American Political Parties
212		Lisa Walker		Data Structures
212		Lisa Walker		Archaeology of the Incas
212		Lisa Walker		American Political Parties
212		Lisa Walker		Social Cognition
213		Paul Hall		Data Structures
213		Paul Hall		Operating System Design
213		Paul Hall		Social Cognition
214		Nancy Allen		Operating System Design
214		Nancy Allen		Aviation Accident Investigation
215		Mark Young		Data Structures
215		Mark Young		Database Systems
215		Mark Young		Operating System Design
215		Mark Young		Aviation Accident Investigation
215		Mark Young		Air Quality Engineering
216		Luis Hernandez		Data Structures
216		Luis Hernandez		Database Systems
216		Luis Hernandez		Operating System Design
216		Luis Hernandez		Air Quality Engineering
217		Donald King		NULL
218		George Wright		NULL

4-SELECT p.prof_name , p.prof_id from professor as p left join semester_course as sem on p.prof_id = sem.prof_id
  GROUP by p.prof_id
  HAVING COUNT(sem.course_code) < 5;

Result:
	prof_name	prof_id		
	Mary Johnson	3
	John Williams	4
	Patricia Jones	5
	Robert Brown	7
	Linda Davis	8

5-SELECT DISTINCT s.student_name FROM student AS s JOIN enrolled as e ON e.student_id=s.student_id 
JOIN semester_course as sem  on e.course_code=sem.course_code and e.quarter=sem.quarter and e.year=sem.year
JOIN professor as p on sem.prof_id=p.prof_id WHERE p.prof_id=2 
GROUP BY s.student_name 
HAVING COUNT(sem.course_code)=(SELECT COUNT(sem.course_code) FROM semester_course AS sem WHERE sem.prof_id=2);

Result:
	student_name	
	**empty**

6-SELECT c.name FROM  course as c WHERE c.course_code  NOT IN ((SELECT sem.course_code FROM semester_course sem)) 
  UNION 
  SELECT c1.name FROM course as  c1, semester_course as sem NATURAL JOIN professor as p,department as dep
  WHERE   p.dept_id = dep.dept_id AND dep.dept_name = 'Computer Science' AND c1.course_code = Sem.course_code;

Result:
	name	
	Patent Law
	Urban Economics
	Organic Chemistry
	Data Structures
	Operating System Design
	Perception
	Multivariate Analysis

7-SELECT s.student_name from student as s WHERE s.student_name LIKE 'M%' AND s.age<20 
UNION
(SELECT p.prof_name from professor as p WHERE p.prof_name LIKE 'M%' AND p.prof_id IN (SELECT sem.prof_id from semester_course as sem GROUP By sem.prof_id HAVING count(*)>2) );

Result:
	Margaret Clark
	Mark Young
	Michael Miller

8-SELECT p.prof_id , p.prof_name FROM  professor as p  NATURAL left join semester_course as sem
WHERE p.dept_id in ('1','2','3','4')
GROUP BY p.prof_id HAVING COUNT(*)<2;

Result:
	
prof_id		prof_name	
3		Mary Johnson
5		Patricia Jones
7		Robert Brown


9-SELECT s.student_id , s.student_name, p.prof_id , p.prof_name
  FROM (student s LEFT JOIN (enrolled e NATURAL JOIN semester_course sem) on s.student_id = e.student_id) LEFT JOIN professor p on sem.prof_id = p.prof_id 
  UNION  
  SELECT s.student_id , s.student_name, p.prof_id , p.prof_name
  FROM (student s RIGHT JOIN (enrolled e NATURAL JOIN semester_course sem) on s.student_id = e.student_id) RIGHT JOIN professor p on sem.prof_id = p.prof_id;



student_id	student_name		prof_id		prof_name	
201		Maria White		6		Michael Miller
201		Maria White		2		James Smith
201		Maria White		1		Ivana Teach
202		Charles Harris		1		Ivana Teach
202		Charles Harris		6		Michael Miller
203		Susan Martin		6		Michael Miller
204		Joseph Thompson		1		Ivana Teach
204		Joseph Thompson		2		James Smith
205		Christopher Garcia	6		Michael Miller
206		Angela Martinez		4		John Williams
207		Thomas Robinson		6		Michael Miller
207		Thomas Robinson		1		Ivana Teach
208		Margaret Clark		2		James Smith
208		Margaret Clark		5		Patricia Jones
208		Margaret Clark		1		Ivana Teach
209		Juan Rodriguez		6		Michael Miller
209		Juan Rodriguez		1		Ivana Teach
210		Dorthy Lewis		1		Ivana Teach
210		Dorthy Lewis		6		Michael Miller
211		Daniel Lee		1		Ivana Teach
211		Daniel Lee		6		Michael Miller
212		Lisa Walker		1		Ivana Teach
212		Lisa Walker		6		Michael Miller
212		Lisa Walker		2		James Smith
213		Paul Hall		1		Ivana Teach
213		Paul Hall		6		Michael Miller	
213		Paul Hall		2		James Smith	
214		Nancy Allen		6		Michael Miller	
214		Nancy Allen		1		Ivana Teach	
215		Mark Young		4		John Williams	
215		Mark Young		6		Michael Miller	
215		Mark Young		1		Ivana Teach	
216		Luis Hernandez		4		John Williams	
216		Luis Hernandez		6		Michael Miller	
216		Luis Hernandez		2		James Smith	
216		Luis Hernandez		1		Ivana Teach	
216		Luis Hernandez		5		Patricia Jones	
217		Donald King		NULL		NULL	
218		George Wright		NULL		NULL	
NULL		NULL			3		Mary Johnson	
NULL		NULL			7		Robert Brown	
NULL		NULL			8		Linda Davis

10- SELECT p.prof_id, p.prof_name, c.course_code, c.name FROM professor as p
JOIN semester_course as sem on p.prof_id = sem.prof_id
JOIN enrolled as e on e.course_code = sem.course_code
JOIN course as c on c.course_code = e.course_code
HAVING count(e.course_code) >= 2;

Result:
	prof_id		prof_name	course_code	name
	6		Michael Miller	CC10		Data Structures

11- SELECT d.dept_name FROM department d JOIN professor p on d.dept_id=p.dept_id JOIN semester_course sem ON sem.prof_id=p.prof_id GROUP BY d.dept_name
HAVING COUNT(sem.prof_id)<3;


Result:
	dept_name
	Arts
	Electronics
	Mechanics
